name: Build

on:
  push:
    branches:
      - browser

jobs:
  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: DynamicTBS_Multiplayer/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Set build method
        run: |
          if [ "${{ matrix.targetPlatform }}" == "StandaloneOSX" ]; then
            echo "::set-env name=BUILD_METHOD::BuildScript.PerformBuildMac"
          elif [ "${{ matrix.targetPlatform }}" == "StandaloneWindows64" ]; then
            echo "::set-env name=BUILD_METHOD::BuildScript.PerformBuildWindows"
          elif [ "${{ matrix.targetPlatform }}" == "WebGL" ]; then
            echo "::set-env name=BUILD_METHOD::BuildScript.PerformBuildWebGL"
          else
            echo "Unsupported targetPlatform: ${{ matrix.targetPlatform }}"
            exit 1
          fi
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: 2021.3.6f1
          projectPath: DynamicTBS_Multiplayer
          buildMethod: ${{ env.BUILD_METHOD }}
      - uses: actions/upload-artifact@v3
        with:
          name: Build_${{ matrix.targetPlatform }}
          path: DynamicTBS_Multiplayer/Builds/${{ matrix.targetPlatform }}
